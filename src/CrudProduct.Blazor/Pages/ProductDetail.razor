@page "/products/detail/{productId:guid}"
@page "/products/detail/"
@using AutoMapper
@using CrudProduct.Products
@inject IProductAppService ProductAppService
@inject IMapper Mapper
@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService


<Div Margin="Margin.IsAuto.OnX" Padding="Padding.Is5.OnX" Width="Width.Is50">
    <Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom">
        @if (isCreate)
        {
            <span>Create</span>
        }
        else
        {
            <span>Edit</span>
        }
    </Heading>
    <Form >
        <Validations Mode="ValidationMode.Auto" Model="@Product">
            <Field>
                <FieldLabel>
                    Category
                </FieldLabel>
                <FieldBody>
                    @if (categories != null)
                    {
                        <Select TValue="Guid" @bind-SelectedValue="@Product.CategoryId">
                            <SelectItem>---Select---</SelectItem>
                            @foreach (var category in categories)
                            {
                                <SelectItem Value="@category.Id">@category.Name</SelectItem>
                            }
                        </Select>
                    }
                </FieldBody>
            </Field>
            <Validation>
                <Field>
                    <FieldLabel>
                        Name
                    </FieldLabel>
                    <FieldBody>
                        @if (Product != null)
                        {
                            <TextEdit Placeholder="Type product name" @bind-Text="@Product.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        }
                    </FieldBody>
                </Field>
            </Validation>
            <Validation>
                <Field>
                    <FieldLabel>
                        Product Price
                    </FieldLabel>
                    <FieldBody>
                        @if (Product != null)
                        {
                            <NumericPicker TValue="decimal" @bind-Value="@Product.Price">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </NumericPicker>
                        }
                    </FieldBody>
                </Field>
            </Validation>
        </Validations>
        <Field>
            @if (isCreate)
            {
                <Button Color="Color.Primary" Clicked="() => CreateEntityAsync(Product)" Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true">
                    Create
                </Button>
            }
            else
            {
                <Button Color="Color.Primary" Clicked="() => UpdateEntityAsync(Product)" Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true">
                    Save
                </Button>
            }
        </Field>
    </Form>
</Div>
